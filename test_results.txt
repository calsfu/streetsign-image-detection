iteration 1: 
NN: 
self.conv1 = nn.Conv2d(3, 4, kernel_size=(5,5), stride=1) #in_channels, out_channels, kernel_size, stride\
self.relu1 = ReLU()
self.maxpool1 = nn.MaxPool2d(kernel_size=(2, 2), stride=(2, 2))

self.conv2 = nn.Conv2d(4, 8, kernel_size=(5,5), stride=1) #Converts 32 channels to 64
self.relu2 = ReLU()
self.maxpool2 = nn.MaxPool2d(kernel_size=(2, 2), stride=(2, 2))
#Fully connected layer, takes inputs to the output layer

self.fc1 = nn.Linear(128, 80) 
self.relu3 = ReLU()

self.fc2 = nn.Linear(80, numClasses)
self.logSoftmax = nn.LogSoftmax(dim=1)

EPOCHS: 15
loss_fn = nn.CrossEntropyLoss()
learning_rate = 1e-3
optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)

Test Error: 
 Accuracy: 49.7%, Avg loss: 0.057779

itreation 2
indepenet var: epochs 15 -> 100

Test Error: 
 Accuracy: 78.4%, Avg loss: 0.047384
Note: Increased 6% from 40 epochs

iteration 3
indepenet var: OPtimizer: SGD -> Adam

EPOCHS: 40

Test Error: 
 Accuracy: 90.6%, Avg loss: 0.043167

 iteration 4
 OPtimizer Adam -> AdamW
 Test Error: 
 Accuracy: 90.1%, Avg loss: 0.033695
 No change

iteration 5
Optimizer = Adagrad
Test Error: 
 Accuracy: 57.6%, Avg loss: 0.051701

Current issue: Gets mixed up with low pixel images: ex between 60 and 50 kph

iteration 5
res 32x32
Test Error: 
 Accuracy: 91.0%, Avg loss: 0.018622

iteration 6
56x56
Epoch 50
-------------------------------
loss: 0.000000  [    0/26640]
loss: 0.000871  [ 6400/26640]
loss: 0.000003  [12800/26640]
loss: 0.006381  [19200/26640]
loss: 0.000002  [25600/26640]
Test Error: 
 Accuracy: 92.3%, Avg loss: 0.017014

 ITERATION 7
 Epoch 50
-------------------------------
loss: 0.000000  [    0/26640]
loss: 0.000001  [ 6400/26640]
loss: 0.000000  [12800/26640]
loss: 0.000000  [19200/26640]
loss: 0.000000  [25600/26640]
Test Error: 
 Accuracy: 93.4%, Avg loss: 0.017280